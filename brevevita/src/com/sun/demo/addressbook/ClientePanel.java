/*
 * BrevevitaPanel.java
 *
 * Created on 5 gennaio 2008, 15.23
 */

package com.sun.demo.addressbook;

import java.awt.event.ActionListener;
import javax.swing.JPanel;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import javax.swing.JButton;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.event.EventListenerList;
/**
 *
 * @author Michele Piunti
 */


public class ClientePanel extends JPanel {
    
    /** Creates new form AddressPanel */
    public ClientePanel() {
        initComponents();
        cliente = new Cliente();
        listeners = new EventListenerList();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">                          
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        
        lblCodCl = new javax.swing.JLabel();
        txtCodCl = new javax.swing.JTextField();
        lblAddress1 = new javax.swing.JLabel();
        txtAddress1 = new javax.swing.JTextField();
        lblAddress2 = new javax.swing.JLabel();
        txtAddress2 = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtPostalCode = new javax.swing.JTextField();
        lblState = new javax.swing.JLabel();
        lblPostalCode = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField(15);
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField(15);
        lblMiddleName = new javax.swing.JLabel();
        txtMiddleName = new javax.swing.JTextField(10);
        lblCredito = new javax.swing.JLabel();
        txtCredito = new javax.swing.JTextField();
        txtCredito.setText("0.0");
        lblPhone = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblCountry = new javax.swing.JLabel();
        txtCountry = new javax.swing.JTextField();
        credButt1 = new JButton("Ricarica +1 e.");
        credButt1.setActionCommand("1_CREDITO");
        credButt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fireActionEvent(evt); 
            }
        });
        credButt5 = new JButton("Ricarica +5 e.");
        credButt5.setActionCommand("5_CREDITO");
        credButt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fireActionEvent(evt); 
            }
        });
                
                

        setLayout(new java.awt.GridBagLayout());

        lblAddress1.setText("Indirizzo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblAddress1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtAddress1, gridBagConstraints);

        lblAddress2.setText("Note");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblAddress2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtAddress2, gridBagConstraints);

        lblCity.setText("Citta'");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblCity, gridBagConstraints);

        txtCity.setMinimumSize(new java.awt.Dimension(100, 21));
        txtCity.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtCity, gridBagConstraints);

        txtState.setMinimumSize(new java.awt.Dimension(30, 21));
        txtState.setPreferredSize(new java.awt.Dimension(30, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtState, gridBagConstraints);
        
        lblPostalCode.setText("CAP");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblPostalCode, gridBagConstraints);
        
        txtPostalCode.setMinimumSize(new java.awt.Dimension(80, 21));
        txtPostalCode.setPreferredSize(new java.awt.Dimension(80, 21));
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(txtPostalCode, gridBagConstraints);

        lblState.setText("Nazione");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblState, gridBagConstraints);

        lblLastName.setText("Cognome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblLastName, gridBagConstraints);

        txtLastName.setMinimumSize(new java.awt.Dimension(100, 21));
        txtLastName.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtLastName, gridBagConstraints);

        lblFirstName.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblFirstName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtFirstName, gridBagConstraints);

        lblCodCl.setText("Numero Tessera");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblCodCl, gridBagConstraints);

        txtCodCl.setMinimumSize(new java.awt.Dimension(80, 21));
        txtCodCl.setPreferredSize(new java.awt.Dimension(80, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtCodCl, gridBagConstraints);

        lblPhone.setText("Cellulare");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblPhone, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtPhone, gridBagConstraints);

        lblEmail.setText("Email");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblEmail, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtEmail, gridBagConstraints);

        lblCountry.setText("Documento");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblCountry, gridBagConstraints);
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtCountry, gridBagConstraints);
        
        lblCredito.setText("Credito");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblCredito, gridBagConstraints);
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtCredito, gridBagConstraints);
        
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(credButt1, gridBagConstraints);
        
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(credButt5, gridBagConstraints);

    }// </editor-fold>                        
    
    
    void setCodiceCl(String codcl) {
        cliente.setCodiceCl(codcl.toUpperCase());
        txtCodCl.setText(codcl.toUpperCase());
    }
    
    String getCodiceCl() {
        String codcl = txtCodCl.getText().toUpperCase();
        cliente.setCodiceCl(codcl);
        return codcl;
    }
    
    void setCredito(String cr) throws MalformedException {
        Double doubleCr;
        String credito = cr.replace(',', '.');
        try{
            doubleCr = new Double(credito);
        }catch(Exception e){
            throw new MalformedException();
        }
        
        cliente.setCredito(doubleCr);
        txtCredito.setText(credito);
    }
    
     void setCredito(double cr)  {
        cliente.setCredito(cr);
        txtCredito.setText(""+cr);
    }
    
    public void updateCredito(double cr)  {
        setCredito(cr);
    }
     
     
    String getCredito() throws MalformedException{
        String creds = txtCredito.getText();
        try{  
            creds = creds.replace(',','.');
            Double cre = new Double(creds);
            cliente.setCredito(cre); 
        }catch(Exception e){
            throw new MalformedException();
        }

        return creds;
    }
 
    void setLastName(String lastName) {
        cliente.setLastName(lastName.toUpperCase());
        txtLastName.setText(lastName.toUpperCase());
    }
    
    String getLastName() {
        String lastName = txtLastName.getText().toUpperCase();
        cliente.setLastName(lastName);
        return lastName;
    }
    
    void setFirstName(String firstName) {
        cliente.setFirstName(firstName.toUpperCase());
        txtFirstName.setText(firstName.toUpperCase());
        
    }
    
    String getFirstName() {
        String firstName = txtFirstName.getText().toUpperCase();
        cliente.setFirstName(firstName);
        return firstName;
    }
    
    void setMiddleName(String middleName) {
        cliente.setMiddleName(middleName.toUpperCase());
        txtMiddleName.setText(middleName.toUpperCase());
    }

    String getMiddleName() {
        String middleName = txtMiddleName.getText().toUpperCase();
        cliente.setMiddleName(middleName);
        return middleName;
    }
    
    void setPhone(String phone) {
        cliente.setPhone(phone);
        txtPhone.setText(phone);
    }
    
    String getPhone() {
        String phone = txtPhone.getText();
        cliente.setPhone(phone);
        return phone;
    }
    
    void setEmail(String email) {
        cliente.setEmail(email);
        txtEmail.setText(email);
    }
    
    String getEmail() {
        String email = txtEmail.getText();
        cliente.setEmail(email);
        return email;
    }
    
    void setAddress1(String address1) {
        cliente.setAddress1(address1);
        txtAddress1.setText(address1);
    }
    
    String getAddress1() {
        String address1 = txtAddress1.getText();
        cliente.setAddress1(address1);
        return address1;
    }
    
    void setAddress2(String address2) {
        cliente.setAddress2(address2);
        txtAddress2.setText(address2);
    }
    
    String getAddress2() {
        String address2 = txtAddress2.getText();
        cliente.setAddress2(address2);
        return address2;
    }
    
    void setCity(String city) {
        cliente.setCity(city);
        txtCity.setText(city);
    }
    
    String getCity() {
        String city = txtCity.getText();
        cliente.setCity(city);
        return city;
    }
 
    void setState(String state) {
        cliente.setState(state);
        txtState.setText(state);
    }
    
    String getState() {
        String state = txtState.getText();
        cliente.setState(state);
        return state;
    }
    
    void setPostalCode(String postalCode) {
        cliente.setPostalCode(postalCode);
        txtPostalCode.setText(postalCode);
    }
    
    String getPostalCode() {
        String postalCode = txtPostalCode.getText();
        cliente.setPostalCode(postalCode);
        return postalCode;
    }
    
    
    void setCountry(String country) {
        cliente.setCountry(country.toUpperCase());
        txtCountry.setText(country.toUpperCase());
    }
    
    String getCountry() {
        String country = txtCountry.getText().toUpperCase();
        cliente.setCountry(country);
        return country;
    }
    
    void setId(int id) {
        cliente.setId(id);
        this.id = id;
    }
    
    public int getId() {
        int id = this.id;
        cliente.setId(id);
        return id;
    }

    
    public void setCliente(Cliente cliente) {
        if (cliente != null) {
            double credito=0;
            try{
              credito = new Double(cliente.getCredito()).doubleValue();
            }catch(Exception e){
                JOptionPane.showMessageDialog(new JFrame(),
                "Controlla il CREDITO: deve essere numerico es: 3.50",
                "Dati Errati",
                JOptionPane.ERROR_MESSAGE);
                return;
            }
            setCredito(credito);
            setCodiceCl(cliente.getCodiceCl());
            setLastName(cliente.getLastName());
            setFirstName(cliente.getFirstName());
            setMiddleName(cliente.getMiddleName());         
            setPhone(cliente.getPhone());
            setEmail(cliente.getEmail());
            setAddress1(cliente.getAddress1());
            setAddress2(cliente.getAddress2());
            setCity(cliente.getCity());
            setState(cliente.getState());
            setPostalCode(cliente.getPostalCode());
            setCountry(cliente.getCountry());
            setId(cliente.getId());
        }
    }
    
    public Cliente getCliente() {
        try{
           getCredito(); 
        }catch(MalformedException e){
            JOptionPane.showMessageDialog(new JFrame(),
                "Controlla il CREDITO: deve essere numerico es: 15.50",
                "Dati Errati",
                JOptionPane.ERROR_MESSAGE);           
//            int n = JOptionPane.showConfirmDialog(
//            new JFrame(),
//            "ERRORE: Credito cliente deve essere valore numerico: es. 12.00",
//            "An Inane Error!",
//            JOptionPane.ERROR_MESSAGE);
            return null;
        }
     
        getCodiceCl();
        getLastName();
        getFirstName();
        getMiddleName();        
        getPhone();
        getEmail();
        getAddress1();
        getAddress2();
        getCity();
        getState();
        getPostalCode();
        getCountry();
        getId();
        return cliente;
    }
    
    
    
    public void clear() {
        txtCodCl.setText(null);
        txtLastName.setText(null);
        txtMiddleName.setText(null);
        txtCredito.setText(null);
        txtFirstName.setText(null);
        txtPhone.setText(null);
        txtEmail.setText(null);
        txtAddress1.setText(null);
        txtAddress2.setText(null);
        txtCity.setText(null);
        txtState.setText(null);
        txtPostalCode.setText(null);
        txtCountry.setText(null);
        id = -1;
        cliente = new Cliente();
    }
    
    public void setEditable(boolean bEditable) {
        txtCodCl.setEditable(bEditable);
        txtFirstName.setEditable(bEditable);
        txtLastName.setEditable(bEditable);
        txtMiddleName.setEditable(bEditable);
        txtCredito.setEditable(bEditable);
        txtAddress1.setEditable(bEditable);
        txtAddress2.setEditable(bEditable);
        txtCity.setEditable(bEditable);
        txtState.setEditable(bEditable);
        txtPostalCode.setEditable(bEditable);
        txtCountry.setEditable(bEditable);
        txtPhone.setEditable(bEditable);
        txtEmail.setEditable(bEditable);
        isEditable = bEditable;
    }
    
    public boolean isEditable() {
        return isEditable;
    }
    
    private void fireActionEvent(ActionEvent evt) {
        ActionListener[] listenerList = listeners.getListeners(ActionListener.class);

        for (int i = listenerList.length-1; i>=0; --i) {
            listenerList[i].actionPerformed(evt);
        }
        
    }
    
    public void addActionListener(ActionListener listener) {
        listeners.add(ActionListener.class, listener);
    }
    
    // Variables declaration - do not modify      
    private javax.swing.JLabel lblCodCl;
    private javax.swing.JLabel lblAddress1;
    private javax.swing.JLabel lblAddress2;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMiddleName;
    private javax.swing.JLabel lblCredito;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPostalCode;
    private javax.swing.JLabel lblState;
    
    private javax.swing.JTextField txtCodCl;
    private javax.swing.JTextField txtAddress1;
    private javax.swing.JTextField txtAddress2;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    private javax.swing.JTextField txtCredito;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPostalCode;
    private javax.swing.JTextField txtState;
    
    private JButton credButt1,credButt5;
    // End of variables declaration                   
    int id;
    boolean isEditable;
    Cliente cliente;
    EventListenerList listeners;
    
}
