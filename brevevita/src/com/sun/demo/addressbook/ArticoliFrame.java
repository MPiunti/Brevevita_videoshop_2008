/*
 * ArticoliFrame.java
 *
 * Created on 12 gennaio 2008, 21.48
 *
 * To change this template, choose Tools | Options and locate the template under
 * the Source Creation and Management node. Right-click the template and choose
 * Open. You can then make changes to the template in the Source Editor.
 */

package com.sun.demo.addressbook;



import com.brevevita.videonoleggio.db.bvdb;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author  Michele Piunti
 */
public class ArticoliFrame 
        extends javax.swing.JFrame 
        implements ActionListener, ListSelectionListener {
    
    /** Creates new form AddressFrame */
    public ArticoliFrame() {
        initComponents();
        loadFrameIcon();
        windowAdapter = new WindowCloser();
        this.addWindowListener(windowAdapter);
        db = new bvdb();
        db.connect();
        addressActionPanel.addActionListener(this);
        tPanel.setEditable(false);
        List<ListEntry> entries = db.getListArticoli();
        articoliListPanel.addListEntries(entries);
        articoliListPanel.addListSelectionListener(this);
    }
    
   
    /**
     * Load our own "address book" icon into our frame window.
     */
    private void loadFrameIcon() {
        URL imgUrl = null;
        ImageIcon imgIcon = null;
        
        imgUrl = ArticoliFrame.class.getResource("resource/addressbook32.gif");
        imgIcon = new ImageIcon(imgUrl);
        Image img = imgIcon.getImage();
        this.setIconImage(img);
        
    }    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">                          
    private void initComponents() {
        addressActionPanel = new com.sun.demo.addressbook.AddressActionPanel();
        tPanel = new com.sun.demo.addressbook.ArticoloPanel();
        articoliListPanel = new com.sun.demo.addressbook.AddressListPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Address Book Demo");
        getContentPane().add(addressActionPanel, java.awt.BorderLayout.SOUTH);

        getContentPane().add(tPanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(articoliListPanel, java.awt.BorderLayout.WEST);

        pack();
    }// </editor-fold>                        


    
    private void cancelArticolo() {
        tPanel.clear();
        tPanel.setEditable(false);
        ListEntry entry = articoliListPanel.getSelectedListEntry();
        if (entry != null) {
            int id = entry.getId();
            Articolo articolo = db.getArticolo(id);
            tPanel.setArticolo(articolo);
        }
        
        
    }
    
    private void newArticolo(){
        tPanel.clear();
        tPanel.setEditable(true);
        
    }
    
    private void deleteArticolo() {
        int id = tPanel.getId();
        if (id != -1) {
            db.deleteArticolo(id);
            int selectedIndex = articoliListPanel.deleteSelectedEntry();
            if (selectedIndex >= 0) {
                selectedIndex = articoliListPanel.setSelectedIndex(selectedIndex);
                ListEntry entry = articoliListPanel.getSelectedListEntry();
                if (entry != null) {
                    id = entry.getId();
                    Articolo articolo = db.getArticolo(id);
                    tPanel.setArticolo(articolo);
                } else {
                    tPanel.clear();
                }
            }
        } else {
            tPanel.clear();
        }
        tPanel.setEditable(false);
        
        
        
    }
    
    private void editArticolo() {
        int selected = articoliListPanel.getSelectedIndex();
        if (selected >=0) {
            tPanel.setEditable(true);
        }
        
    }
    
    private void saveArticolo() {
        if (tPanel.isEditable()) {
            Articolo articolo = tPanel.getArticolo();
            int id = articolo.getId();
                System.out.println("id articolo: " +id);
                String titolo = articolo.getTitolo();
                String anno = articolo.getAnno();
                
            if (id == -1) {
                id = db.saveArticolo(articolo);
                articolo.setId(id);

                ListEntry entry = new ListEntry(titolo, anno, id);
                articoliListPanel.addListEntry(entry);

            } else {
                db.editArticolo(articolo);
                ListEntry entry = articoliListPanel.getSelectedListEntry();
                entry.setFirstName(anno);
                
                entry.setLastName(titolo);
                articoliListPanel.repaint();
            }
            tPanel.setEditable(false);
        }
    }
    
    
    public void actionPerformed(ActionEvent e) {
        String actionCommand = e.getActionCommand();
        System.out.println("ActionEvent: " + actionCommand);
        if (actionCommand.equalsIgnoreCase("CANCEL_ADDRESS")) {
            cancelArticolo();
        } else if (actionCommand.equalsIgnoreCase("NEW_CLIENTE")) {
            newArticolo();
        } else if (actionCommand.equalsIgnoreCase("CANCEL_CLIENTE")) {
            deleteArticolo();
        } else if (actionCommand.equalsIgnoreCase("EDIT_CLIENTE")) {
            editArticolo();
        } else if (actionCommand.equalsIgnoreCase("SAVE_CLIENTE")) {
            saveArticolo();
        }
    }

    public static void main(String[] args) {
        ArticoliFrame app = new ArticoliFrame();
        app.setVisible(true);
    }

    public void valueChanged(ListSelectionEvent e) {
        if (e.getValueIsAdjusting()) {
            return;
        }
        JList entryList = (JList) e.getSource();
        selectedEntry = entryList.getSelectedIndex();
        ListEntry entry = (ListEntry)entryList.getSelectedValue();
        if (entry != null) {
            int id = entry.getId();
            Articolo articolo = db.getArticolo(id);
            tPanel.setArticolo(articolo);
        } else {
            tPanel.clear();
        }
    }
    
    
    // Variables declaration - do not modify                     
    private com.sun.demo.addressbook.AddressActionPanel addressActionPanel;
    private com.sun.demo.addressbook.AddressListPanel articoliListPanel;
    private com.sun.demo.addressbook.ArticoloPanel tPanel;
    // End of variables declaration                   
    
    private int selectedEntry = -1;
    private bvdb db;
    private WindowAdapter windowAdapter;
    
    class WindowCloser extends WindowAdapter {
        public void windowClosing(WindowEvent e) {
            db.disconnect();
        }
    
    }
}
